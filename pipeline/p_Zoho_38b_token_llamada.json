{
	"name": "p_Zoho_38b_token_llamada",
	"properties": {
		"activities": [
			{
				"name": "CheckFolderExists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adsl_json_delete",
						"type": "DatasetReference",
						"parameters": {
							"container": "bronze",
							"folder": {
								"value": "@concat('lakehouse/zoho_38b/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If Condition Delete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CheckFolderExists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('CheckFolderExists').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete Files in folder",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adsl_json_delete",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehouse/zoho_38b/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "GetNextPageTokenLeads",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "CopydataZohoLeads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_adsl_json",
						"type": "DatasetReference",
						"parameters": {
							"container": "bronze",
							"folder": {
								"value": "@concat('lakehouse/zoho_38b/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat('JsaZohoLeads_', string(pipeline().parameters.PageCounter), '.json')",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "SetNextPageTokenLeads",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "PageCounterLeads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "NextPageToken",
					"value": {
						"value": "@activity('GetNextPageTokenLeads').output.firstRow.info.next_page_token\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "LogtokenLeads",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SetNextPageTokenLeads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Log_Token",
					"value": {
						"value": "@string(variables('NextPageToken'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "TempCounterLeads",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetNextPageTokenLeads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TempCounter",
					"value": {
						"value": "@add(variables('PageCounter'), 1)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "PageCounterLeads",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "TempCounterLeads",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "PageCounter",
					"value": {
						"value": "@variables('TempCounter')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CopydataZohoLeads",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If Condition Delete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Content-Type": "application/json",
							"Authorization": {
								"value": "@concat('Bearer ', pipeline().parameters.AccessToken)",
								"type": "Expression"
							},
							"If-Modified-Since": {
								"value": "@variables('If-Modified-Since')",
								"type": "Expression"
							}
						},
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_Zoho_API",
						"type": "DatasetReference",
						"parameters": {
							"relativeUrl": {
								"value": "@if(\n    or(equals(pipeline().parameters.PageToken, null), equals(pipeline().parameters.PageToken, '')),\n    'https://www.zohoapis.eu/crm/v7/Leads?per_page=200&fields=Created_Date,Apellido_2,Description,device,Email,First_Name,id,id_producto,id_programa,Last_Name,lead_correlation_id,lead_rating,lead_scoring,Lead_Source,Lead_Status,Mobile,Motivos_de_perdida,Nacionalidad,Owner,Phone,Provincia,Residencia,Sexo,source,Tipolog_a_de_cliente,Typo_Conversion,utm_ad_id,utm_adset_id,utm_campaign_id,utm_campaign_name,utm_channel,utm_estrategia,utm_medium,utm_perfil,utm_source,utm_term,utm_type,Modified_Time,Created_Time,L_nea_de_Negocio,Oportunidad_Asociada,ID_Clientify,Modalidad_de_curso,Sede',\n    concat('https://www.zohoapis.eu/crm/v7/Leads?per_page=200&page_token=', pipeline().parameters.PageToken, '&fields=Created_Date,Apellido_2,Description,device,Email,First_Name,id,id_producto,id_programa,Last_Name,lead_correlation_id,lead_rating,lead_scoring,Lead_Source,Lead_Status,Mobile,Motivos_de_perdida,Nacionalidad,Owner,Phone,Provincia,Residencia,Sexo,source,Tipolog_a_de_cliente,Typo_Conversion,utm_ad_id,utm_adset_id,utm_campaign_id,utm_campaign_name,utm_channel,utm_estrategia,utm_medium,utm_perfil,utm_source,utm_term,utm_type,Modified_Time,Created_Time,L_nea_de_Negocio,Oportunidad_Asociada,ID_Clientify,Modalidad_de_curso,Sede')\n)",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adsl_json",
						"type": "DatasetReference",
						"parameters": {
							"container": "bronze",
							"folder": {
								"value": "@concat('lakehouse/zoho_38b/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat('JsaZohoLeads_', string(pipeline().parameters.PageCounter), '.json')",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"client_id": {
				"type": "string",
				"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
			},
			"client_secret": {
				"type": "string",
				"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
			},
			"refresh_token": {
				"type": "string",
				"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
			},
			"reprocessDate": {
				"type": "string",
				"defaultValue": "7"
			},
			"AccessToken": {
				"type": "string"
			},
			"PageToken": {
				"type": "string"
			},
			"PageCounter": {
				"type": "string"
			}
		},
		"variables": {
			"WebActivityName": {
				"type": "String"
			},
			"If-Modified-Since": {
				"type": "String"
			},
			"NextPageToken": {
				"type": "String"
			},
			"Log_Token": {
				"type": "String"
			},
			"PageCounter": {
				"type": "Integer",
				"defaultValue": 1
			},
			"TempCounter": {
				"type": "Integer",
				"defaultValue": 0
			},
			"TokenStartTime": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Lakehouse/Bronze"
		},
		"annotations": [],
		"lastPublishTime": "2025-06-23T12:54:36Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}