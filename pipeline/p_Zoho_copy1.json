{
	"name": "p_Zoho_copy1",
	"properties": {
		"activities": [
			{
				"name": "If Modified Since Date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetZohoAccessToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "ifModifiedSinceDate",
					"value": {
						"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "access_token",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "If Modified Since Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(\n  equals(variables('next_page_token'), ''),\n  equals(variables('next_page_token'), null)\n)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopydataZohoDealsV1",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Content-Type": "application/json",
										"Authorization": {
											"value": "@concat('Bearer ', activity('GetZohoAccessToken').output.access_token)",
											"type": "Expression"
										},
										"If-Modified-Since": {
											"value": "@variables('ifModifiedSinceDate')",
											"type": "Expression"
										}
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_Zoho_API",
									"type": "DatasetReference",
									"parameters": {
										"relativeUrl": {
											"value": "@concat('https://www.zohoapis.eu/crm/v7/Deals?per_page=200&fields=Motivo_p_rdida_B2C,ID_Producto,Owner,Motivo_p_rdida_B2B,Residencia1,utm_type,utm_medium,utm_campaign_name,Fecha_hora_Documentaci_n_completada,br_rating,Deal_Name,Exchange_Rate,Currency,Stage,id,utm_ad_id,ID_Classlife,utm_campaign_id,Importe_pagado,br_score,utm_perfil,C_digo_descuento,L_nea_de_Negocio,utm_source,Descuento,Closing_Date,network,utm_adset_id,utm_estrategia,tipo_conversion,Amount,Probability,Profesion_Estudiante,Contact_Name.id,Pipeline,Competencia,utm_term,utm_channel,Tipolog_a_de_cliente,Created_Date,Modified_Time,ID_Lead,Fecha_hora_Pagado_NE,Fecha_hora_Anulaci_n,Nacionalidad1,lead_correlation_id,id_unico,Tipolog_a_del_alumno1,Contact_Name,Created_Time')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adsl_json",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"folder": {
											"value": "@concat(\n  'lakehouse/zoho/',\n  formatDateTime(utcnow(),'yyyy'), '/',\n  formatDateTime(utcnow(),'MM'), '/',\n  formatDateTime(utcnow(),'dd')\n)",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('JsaZohoDeals', variables('page_counter_string'), '.json')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "IncrementPage",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SetNextPageToken",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "page_counter_string",
								"value": {
									"value": "@string(variables('page_counter'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "GetZohoDealsPage",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', activity('GetZohoAccessToken').output.access_token)",
										"type": "Expression"
									},
									"Content-Type": "application/json"
								},
								"url": {
									"value": "@concat('https://www.zohoapis.eu/crm/v7/Deals?per_page=200&fields=Motivo_p_rdida_B2C,ID_Producto,Owner,Motivo_p_rdida_B2B,Residencia1,utm_type,utm_medium,utm_campaign_name,Fecha_hora_Documentaci_n_completada,br_rating,Deal_Name,Exchange_Rate,Currency,Stage,id,utm_ad_id,ID_Classlife,utm_campaign_id,Importe_pagado,br_score,utm_perfil,C_digo_descuento,L_nea_de_Negocio,utm_source,Descuento,Closing_Date,network,utm_adset_id,utm_estrategia,tipo_conversion,Amount,Probability,Profesion_Estudiante,Contact_Name.id,Pipeline,Competencia,utm_term,utm_channel,Tipolog_a_de_cliente,Created_Date,Modified_Time,ID_Lead,Fecha_hora_Pagado_NE,Fecha_hora_Anulaci_n,Nacionalidad1,lead_correlation_id,id_unico,Tipolog_a_del_alumno1,Contact_Name,Created_Time',if(\n        equals(variables('next_page_token'), ''), \n        '', \n        concat('&next_page_token=', variables('next_page_token'))\n    )\n)",
									"type": "Expression"
								},
								"body": "@concat('client_id=', pipeline().parameters.client_id, \n        '&client_secret=', pipeline().parameters.client_secret,\n        '&refresh_token=', pipeline().parameters.refresh_token,\n        '&grant_type=refresh_token')"
							}
						},
						{
							"name": "SetNextPageToken",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SavePageAsBlob",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "next_page_token",
								"value": {
									"value": "@activity('GetZohoDealsPage').output.body.info.next_page_token",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SavePageAsBlob",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "GetZohoDealsPage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "PUT",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', activity('GetZohoAccessToken').output.access_token)",
										"type": "Expression"
									},
									"x-ms-blob-type": "BlockBlob"
								},
								"url": {
									"value": "@concat(\n  'https://stmetrodoralakehousepro.blob.core.windows.net/bronze/lakehouse/zoho/',\n  formatDateTime(utcnow(), 'yyyy/MM/dd'), '/',\n  'JsaZohoDeals', string(variables('page_counter')), '.json'\n)\n",
									"type": "Expression"
								},
								"body": {
									"value": "@activity('GetZohoDealsPage').output",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "next_page_token",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "next_page_token",
					"value": "''"
				}
			},
			{
				"name": "GetZohoAccessToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "next_page_token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"url": {
						"value": "https://accounts.zoho.eu/oauth/v2/token",
						"type": "Expression"
					},
					"body": "@concat('client_id=', pipeline().parameters.client_id, \n        '&client_secret=', pipeline().parameters.client_secret,\n        '&refresh_token=', pipeline().parameters.refresh_token,\n        '&grant_type=refresh_token')",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "access_token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GetZohoAccessToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "access_token",
					"value": {
						"value": "@activity('GetZohoAccessToken').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1_copy1",
				"type": "Until",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(\n  equals(variables('next_page_token'), ''),\n  equals(variables('next_page_token'), null)\n)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopydataZohoDealsV1_copy1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "next_page_token_1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Content-Type": "application/json",
										"Authorization": {
											"value": "@concat('Bearer ', activity('GetZohoAccessToken').output.access_token)",
											"type": "Expression"
										},
										"If-Modified-Since": {
											"value": "@variables('ifModifiedSinceDate')",
											"type": "Expression"
										}
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_Zoho_API",
									"type": "DatasetReference",
									"parameters": {
										"relativeUrl": {
											"value": "@concat('https://www.zohoapis.eu/crm/v7/Deals?per_page=200&fields=Motivo_p_rdida_B2C,ID_Producto,Owner,Motivo_p_rdida_B2B,Residencia1,utm_type,utm_medium,utm_campaign_name,Fecha_hora_Documentaci_n_completada,br_rating,Deal_Name,Exchange_Rate,Currency,Stage,id,utm_ad_id,ID_Classlife,utm_campaign_id,Importe_pagado,br_score,utm_perfil,C_digo_descuento,L_nea_de_Negocio,utm_source,Descuento,Closing_Date,network,utm_adset_id,utm_estrategia,tipo_conversion,Amount,Probability,Profesion_Estudiante,Contact_Name.id,Pipeline,Competencia,utm_term,utm_channel,Tipolog_a_de_cliente,Created_Date,Modified_Time,ID_Lead,Fecha_hora_Pagado_NE,Fecha_hora_Anulaci_n,Nacionalidad1,lead_correlation_id,id_unico,Tipolog_a_del_alumno1,Contact_Name,Created_Time')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adsl_json",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"folder": {
											"value": "@concat(\n  'lakehouse/zoho/',\n  formatDateTime(utcnow(),'yyyy'), '/',\n  formatDateTime(utcnow(),'MM'), '/',\n  formatDateTime(utcnow(),'dd')\n)",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('JsaZohoDeals', variables('page_counter_string'), '.json')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "page_counter_string_copy1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "CopydataZohoDealsV1_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "page_counter_string",
								"value": {
									"value": "@string(variables('page_counter'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "GetZohoDealsPage_copy1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', activity('GetZohoAccessToken').output.access_token)",
										"type": "Expression"
									},
									"Content-Type": "application/json"
								},
								"url": {
									"value": "@concat('https://www.zohoapis.eu/crm/v7/Deals?per_page=200&fields=Motivo_p_rdida_B2C,ID_Producto,Owner,Motivo_p_rdida_B2B,Residencia1,utm_type,utm_medium,utm_campaign_name,Fecha_hora_Documentaci_n_completada,br_rating,Deal_Name,Exchange_Rate,Currency,Stage,id,utm_ad_id,ID_Classlife,utm_campaign_id,Importe_pagado,br_score,utm_perfil,C_digo_descuento,L_nea_de_Negocio,utm_source,Descuento,Closing_Date,network,utm_adset_id,utm_estrategia,tipo_conversion,Amount,Probability,Profesion_Estudiante,Contact_Name.id,Pipeline,Competencia,utm_term,utm_channel,Tipolog_a_de_cliente,Created_Date,Modified_Time,ID_Lead,Fecha_hora_Pagado_NE,Fecha_hora_Anulaci_n,Nacionalidad1,lead_correlation_id,id_unico,Tipolog_a_del_alumno1,Contact_Name,Created_Time',if(\n        equals(variables('next_page_token'), ''), \n        '', \n        concat('&next_page_token=', variables('next_page_token'))\n    )\n)",
									"type": "Expression"
								},
								"body": "@concat('client_id=', pipeline().parameters.client_id, \n        '&client_secret=', pipeline().parameters.client_secret,\n        '&refresh_token=', pipeline().parameters.refresh_token,\n        '&grant_type=refresh_token')"
							}
						},
						{
							"name": "next_page_token_1_copy1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "GetZohoDealsPage_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "next_page_token",
								"value": {
									"value": "@activity('GetZohoDealsPage').output.info.next_page_token",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"parameters": {
			"client_id": {
				"type": "string",
				"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
			},
			"client_secret": {
				"type": "string",
				"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
			},
			"refresh_token": {
				"type": "string",
				"defaultValue": "1000.256013fabf162c6a30e7260b66598da2.d706caedd894d618249377cda8b5cf15"
			},
			"reprocessDate": {
				"type": "string",
				"defaultValue": "7"
			}
		},
		"variables": {
			"WebActivityName": {
				"type": "String"
			},
			"ifModifiedSinceDate": {
				"type": "String"
			},
			"next_page_token": {
				"type": "String"
			},
			"access_token": {
				"type": "String"
			},
			"page_counter": {
				"type": "Integer",
				"defaultValue": 1
			},
			"page_counter_string": {
				"type": "String",
				"defaultValue": "1"
			}
		},
		"folder": {
			"name": "Lakehouse/Bronze"
		},
		"annotations": [],
		"lastPublishTime": "2025-03-22T17:50:20Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}