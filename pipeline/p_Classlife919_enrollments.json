{
	"name": "p_Classlife919_enrollments",
	"properties": {
		"activities": [
			{
				"name": "CheckFolderExists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adsl_json_delete",
						"type": "DatasetReference",
						"parameters": {
							"container": "bronze",
							"folder": {
								"value": "@concat('lakehouse/classlife/')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "If Condition Delete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CheckFolderExists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('CheckFolderExists').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete Files Enrollments",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adsl_json_delete",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Until Enrollments",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "If Condition Delete",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('NextItem'), 0)\n",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "2 PageCounter",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "2 TempCounter",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "PageCounter",
								"value": {
									"value": "@variables('TempCounter')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "2 TempCounter",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Enrollments",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "TempCounter",
								"value": {
									"value": "@add(variables('PageCounter'), 1)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "2 Set Items",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "2 PageCounter",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "NextItem",
								"value": {
									"value": "@length(activity('WebClasslifeEnrollments').output.data.items)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "WebClasslifeEnrollments",
							"description": "Activity web that calls the endpoint Enrollments",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"apiKey": {
										"value": "@pipeline().parameters.API_KEY",
										"type": "Expression"
									},
									"clientId": {
										"value": "@pipeline().parameters.API_CLIENT",
										"type": "Expression"
									}
								},
								"url": {
									"value": "@concat('https://api.classlife.io/api/v1/enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Enrollments",
							"description": "Enrollments",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "WebClasslifeEnrollments",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Content-Type": "application/json",
										"apiKey": {
											"value": "@pipeline().parameters.API_KEY",
											"type": "Expression"
										},
										"clientId": {
											"value": "@pipeline().parameters.API_CLIENT",
											"type": "Expression"
										}
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_Classlife",
									"type": "DatasetReference",
									"parameters": {
										"relativeUrl": {
											"value": "@concat('enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adsl_json",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat('JsaClassLifeEnrollments_', string(variables('PageCounter')), '.json')",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"parameters": {
			"API_CLIENT": {
				"type": "string",
				"defaultValue": "919"
			},
			"API_KEY": {
				"type": "string",
				"defaultValue": "C!Fd4e045d16e5544"
			},
			"limit": {
				"type": "string",
				"defaultValue": "100"
			}
		},
		"variables": {
			"PageCounter": {
				"type": "Integer",
				"defaultValue": 1
			},
			"TempCounter": {
				"type": "Integer",
				"defaultValue": 0
			},
			"NextItem": {
				"type": "Integer"
			},
			"WebActivityRequest": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Lakehouse/Bronze/FISIOFOCUS"
		},
		"annotations": [],
		"lastPublishTime": "2025-06-03T16:56:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}