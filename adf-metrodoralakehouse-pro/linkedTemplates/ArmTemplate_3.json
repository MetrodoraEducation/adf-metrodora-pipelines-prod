{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-metrodoralakehouse-pro"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/p_Child_Leads_Isep_34f')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounterParent",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable Users Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@pipeline().parameters.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "NextPageTokenParent",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable Users Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@pipeline().parameters.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UntilLeads",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "NextPageTokenParent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PageCounterParent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(\n  or(\n    equals(variables('NextPageToken'), null),\n    equals(trim(variables('NextPageToken')), '')\n  ),\n  greater(\n    div(sub(ticks(utcnow()), ticks(pipeline().parameters.TokenStartTime)), 10000000),\n    3300\n  )\n)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopydataZohoDeals",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"Authorization": {
													"value": "@concat('Bearer ', activity('WebZohoAPI').output.access_token)",
													"type": "Expression"
												},
												"If-Modified-Since": {
													"value": "@pipeline().parameters.IfModifiedSince",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Zoho_API",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@if(\n    or(\n        equals(variables('NextPageToken'), null),\n        equals(variables('NextPageToken'), '')\n    ),\n    concat(\n        'https://www.zohoapis.eu/crm/v7/Leads?per_page=200&page=',\n        string(variables('PageCounter')),\n        '&fields=Created_Date,Apellido_2,Description,device,Email,First_Name,id,id_producto,id_programa,Last_Name,lead_correlation_id,lead_rating,lead_scoring,Lead_Source,Lead_Status,Mobile,Motivos_de_perdida,Nacionalidad,Owner,Phone,Provincia,Residencia,Sexo,source,Tipolog_a_de_cliente,Typo_Conversion,utm_ad_id,utm_adset_id,utm_campaign_id,utm_campaign_name,utm_channel,utm_estrategia,utm_medium,utm_perfil,utm_source,utm_term,utm_type,Modified_Time,Created_Time,L_nea_de_Negocio,Oportunidad_Asociada,ID_Clientify,Modalidad_de_curso,Sede'\n    ),\n    concat(\n        'https://www.zohoapis.eu/crm/v7/Leads?per_page=200&page_token=',\n        variables('NextPageToken'),\n        '&fields=Created_Date,Apellido_2,Description,device,Email,First_Name,id,id_producto,id_programa,Last_Name,lead_correlation_id,lead_rating,lead_scoring,Lead_Source,Lead_Status,Mobile,Motivos_de_perdida,Nacionalidad,Owner,Phone,Provincia,Residencia,Sexo,source,Tipolog_a_de_cliente,Typo_Conversion,utm_ad_id,utm_adset_id,utm_campaign_id,utm_campaign_name,utm_channel,utm_estrategia,utm_medium,utm_perfil,utm_source,utm_term,utm_type,Modified_Time,Created_Time,L_nea_de_Negocio,Oportunidad_Asociada,ID_Clientify,Modalidad_de_curso,Sede'\n    )\n)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_34f/Leads/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaZohoLeads_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GetNextPageTokenDeals",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "CopydataZohoDeals",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_34f/Leads/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaZohoLeads_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Set NextPageTokenDeals",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PageCounterDeals",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextPageToken",
										"value": {
											"value": "@activity('GetNextPageTokenDeals').output.firstRow.info.next_page_token",
											"type": "Expression"
										}
									}
								},
								{
									"name": "LogtokenDeals",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set NextPageTokenDeals",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Log_Token",
										"value": {
											"value": "@string(variables('NextPageToken'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TempCounterDeals",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GetNextPageTokenDeals",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "PageCounterDeals",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TempCounterDeals",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "WebZohoAPI",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.zoho.eu/oauth/v2/token",
							"body": {
								"value": "@concat('client_id=', pipeline().parameters.client_id, \n        '&client_secret=', pipeline().parameters.client_secret,\n        '&refresh_token=', pipeline().parameters.refresh_token,\n        '&grant_type=refresh_token')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set variable Users Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WebZohoAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WebActivityName",
							"value": {
								"value": "@activity('WebZohoAPI').output.access_token\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WebZohoAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@pipeline().parameters.TokenStartTime",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Page Counter and NextpageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "UntilLeads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "PageCounter",
									"value": {
										"type": "Expression",
										"content": "@variables('PageCounter')"
									}
								},
								{
									"key": "NextPageToken",
									"value": {
										"type": "Expression",
										"content": "@variables('NextPageToken')"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.34fd15fcfd6362189382a6d9c93e2ac4.306ed77e527f45ace0f33bcf2302eba4"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "7"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenParent": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife919_admissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Admissions",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Admissions",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "1 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Admissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeAdmissions').output.data.items)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeAdmissions",
									"description": "Activity web that calls the endpoint Admissions",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Admissions",
									"description": "Admissions",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeAdmissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeAdmissions_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "919"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fd4e045d16e5544"
					},
					"limit": {
						"type": "string",
						"defaultValue": "350"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FISIOFOCUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife919_enroll_groups_receipts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Enroll groups",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WebClasslifeEnroll_groups",
									"description": "Activity web that calls the endpoint enroll_groups",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeProductos",
									"description": "ClasslifeEnrollGroups",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnroll_groups",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeProductos_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeProductos",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnroll_groups').output.data.items)\n",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Enroll Groups",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files Receipts",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Receipts",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "3 Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "4 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Receipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeReceipts').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeReceipts",
									"description": "Activity web that calls the endpoint Receipts",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Receipts",
									"description": "Receipts",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeReceipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeReceipts_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "3 Reboot PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Until Enroll groups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "919"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fd4e045d16e5544"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FISIOFOCUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife919_enrollments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Enrollments",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Enrollments",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "2 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Enrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnrollments').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeEnrollments",
									"description": "Activity web that calls the endpoint Enrollments",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Enrollments",
									"description": "Enrollments",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeEnrollments_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "919"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fd4e045d16e5544"
					},
					"limit": {
						"type": "string",
						"defaultValue": "100"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FISIOFOCUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife919_original')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Enroll groups",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WebClasslifeEnroll_groups",
									"description": "Activity web that calls the endpoint enroll_groups",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeProductos",
									"description": "ClasslifeEnrollGroups",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnroll_groups",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeProductos_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeProductos",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnroll_groups').output.data.items)\n",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Enroll Groups",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files Enrollments",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files Admissions",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files Receipts",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files students",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Admissions",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "2 Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "1 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Admissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeAdmissions').output.data.items)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeAdmissions",
									"description": "Activity web that calls the endpoint Admissions",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Admissions",
									"description": "Admissions",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeAdmissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeAdmissions_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Until Enrollments",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "2 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Enrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnrollments').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeEnrollments",
									"description": "Activity web that calls the endpoint Enrollments",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Enrollments",
									"description": "Enrollments",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeEnrollments_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Until Students",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "1 Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "3 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeStudents",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeStudents').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeStudents",
									"description": "Activity web that calls the endpoint Students",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeStudents",
									"description": "ClasslifeStudents",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeStudents",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Until Receipts",
						"type": "Until",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "3 Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "4 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Receipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeReceipts').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeReceipts",
									"description": "Activity web that calls the endpoint Receipts",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Receipts",
									"description": "Receipts",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeReceipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeReceipts_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Reboot PageCounter",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Until Enroll groups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Reboot PageCounter",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Until Enrollments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Reboot PageCounter",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Until Students",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 Reboot PageCounter",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Until Admissions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "919"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fd4e045d16e5544"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FISIOFOCUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife919_students')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files students",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Students",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "3 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeStudents",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeStudents').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeStudents",
									"description": "Activity web that calls the endpoint Students",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeStudents",
									"description": "ClasslifeStudents",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeStudents",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "919"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fd4e045d16e5544"
					},
					"limit": {
						"type": "string",
						"defaultValue": "750"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FISIOFOCUS"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife931_enrollments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_931/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Enrollments",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Enrollments",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "2 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Enrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnrollments').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeEnrollments",
									"description": "Activity web that calls the endpoint Enrollments",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Enrollments",
									"description": "Enrollments",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeEnrollments_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "931"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!F5ec7888d40c7e8"
					},
					"limit": {
						"type": "string",
						"defaultValue": "500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife931_productos_admissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Admissions",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "1 Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "1 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Admissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeAdmissions').output.data.items)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeAdmissions",
									"description": "Activity web that calls the endpoint Admissions",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Admissions",
									"description": "Admissions",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeAdmissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeAdmissions_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "1 Reboot PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Until Enroll groups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until Enroll groups",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WebClasslifeEnroll_groups",
									"description": "Activity web that calls the endpoint enroll_groups",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeProductos",
									"description": "ClasslifeEnrollGroups",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnroll_groups",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeProductos_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeProductos",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnroll_groups').output.data.items)\n",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_931/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Enroll Groups",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files Admissions",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "931"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!F5ec7888d40c7e8"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife931_receipts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_931/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Receipts",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Receipts",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "4 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Receipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeReceipts').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeReceipts",
									"description": "Activity web that calls the endpoint Receipts",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Receipts",
									"description": "Receipts",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeReceipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeReceipts_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "931"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!F5ec7888d40c7e8"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife931_students')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_931/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files students",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files students Cleaned",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Delete Files students",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/','student_cleaned')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Students",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "3 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeStudents_931_cleaned",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeStudents').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeStudents",
									"description": "Activity web that calls the endpoint Students",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeStudents_931",
									"description": "ClasslifeStudents",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeStudents",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ClasslifeStudents_931_cleaned",
									"description": "ClasslifeStudents",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ClasslifeStudents_931",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['student_id']"
													},
													"sink": {
														"path": "student_id"
													}
												},
												{
													"source": {
														"path": "[['student_full_name']"
													},
													"sink": {
														"path": "student_full_name"
													}
												},
												{
													"source": {
														"path": "[['student_email']"
													},
													"sink": {
														"path": "student_email"
													}
												},
												{
													"source": {
														"path": "[['student_phone']"
													},
													"sink": {
														"path": "student_phone"
													}
												},
												{
													"source": {
														"path": "[['student_registration_date']"
													},
													"sink": {
														"path": "student_registration_date"
													}
												},
												{
													"source": {
														"path": "[['student_active']"
													},
													"sink": {
														"path": "student_active"
													}
												},
												{
													"source": {
														"path": "[['metas']['zoho_id']"
													},
													"sink": {
														"path": "zoho_id"
													}
												},
												{
													"source": {
														"path": "[['metas']['ciudad']"
													},
													"sink": {
														"path": "ciudad"
													}
												},
												{
													"source": {
														"path": "[['metas']['codigo']"
													},
													"sink": {
														"path": "codigo"
													}
												},
												{
													"source": {
														"path": "[['metas']['pais']"
													},
													"sink": {
														"path": "pais"
													}
												},
												{
													"source": {
														"path": "[['metas']['edad']"
													},
													"sink": {
														"path": "edad"
													}
												},
												{
													"source": {
														"path": "[['metas']['direccion']"
													},
													"sink": {
														"path": "direccion"
													}
												},
												{
													"source": {
														"path": "[['metas']['nacimiento']"
													},
													"sink": {
														"path": "nacimiento"
													}
												},
												{
													"source": {
														"path": "[['metas']['libres_expediente_alexia']"
													},
													"sink": {
														"path": "libres_expediente_alexia"
													}
												},
												{
													"source": {
														"path": "[['metas']['libres_grupo_curso_anterior']"
													},
													"sink": {
														"path": "libres_grupo_curso_anterior"
													}
												},
												{
													"source": {
														"path": "[['metas']['libres_titulacion_curso_anterior']"
													},
													"sink": {
														"path": "libres_titulacion_curso_anterior"
													}
												}
											],
											"collectionReference": "$['data']['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_931/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/','student_cleaned')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "931"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!F5ec7888d40c7e8"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife_Isep_929_Receipts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_929/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Receipts",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Receipts",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "4 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Receipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "4 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "4 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeReceipts').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeReceipts",
									"description": "Activity web that calls the endpoint Receipts",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Receipts",
									"description": "Receipts",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeReceipts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('receipts?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeReceipts_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "929"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fc0d63176713558"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife_Isep_929_Students')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_929/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files students",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files students Cleaned",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Delete Files students",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/','student_cleaned')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Students",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "3 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeStudents_929_cleaned",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "3 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "3 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeStudents').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeStudents",
									"description": "Activity web that calls the endpoint Students",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeStudents_929",
									"description": "ClasslifeStudents",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeStudents",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('students?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ClasslifeStudents_929_cleaned",
									"description": "ClasslifeStudents",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ClasslifeStudents_929",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['student_id']"
													},
													"sink": {
														"path": "student_id"
													}
												},
												{
													"source": {
														"path": "[['student_full_name']"
													},
													"sink": {
														"path": "student_full_name"
													}
												},
												{
													"source": {
														"path": "[['student_email']"
													},
													"sink": {
														"path": "student_email"
													}
												},
												{
													"source": {
														"path": "[['student_phone']"
													},
													"sink": {
														"path": "student_phone"
													}
												},
												{
													"source": {
														"path": "[['student_registration_date']"
													},
													"sink": {
														"path": "student_registration_date"
													}
												},
												{
													"source": {
														"path": "[['student_active']"
													},
													"sink": {
														"path": "student_active"
													}
												},
												{
													"source": {
														"path": "[['metas']['zoho_id']"
													},
													"sink": {
														"path": "zoho_id"
													}
												},
												{
													"source": {
														"path": "[['metas']['ciudad']"
													},
													"sink": {
														"path": "ciudad"
													}
												},
												{
													"source": {
														"path": "[['metas']['codigo']"
													},
													"sink": {
														"path": "codigo"
													}
												},
												{
													"source": {
														"path": "[['metas']['pais']"
													},
													"sink": {
														"path": "pais"
													}
												},
												{
													"source": {
														"path": "[['metas']['edad']"
													},
													"sink": {
														"path": "edad"
													}
												},
												{
													"source": {
														"path": "[['metas']['direccion']"
													},
													"sink": {
														"path": "direccion"
													}
												},
												{
													"source": {
														"path": "[['metas']['nacimiento']"
													},
													"sink": {
														"path": "nacimiento"
													}
												},
												{
													"source": {
														"path": "[['metas']['libres_expediente_alexia']"
													},
													"sink": {
														"path": "libres_expediente_alexia"
													}
												},
												{
													"source": {
														"path": "[['metas']['libres_grupo_curso_anterior']"
													},
													"sink": {
														"path": "libres_grupo_curso_anterior"
													}
												},
												{
													"source": {
														"path": "[['metas']['libres_titulacion_curso_anterior']"
													},
													"sink": {
														"path": "libres_titulacion_curso_anterior"
													}
												}
											],
											"collectionReference": "$['data']['items']"
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'),'/','student_cleaned')",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeStudents_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "929"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fc0d63176713558"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife_Isep_929_admissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Admissions",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "1 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Admissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "1 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "1 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeAdmissions').output.data.items)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeAdmissions",
									"description": "Activity web that calls the endpoint Admissions",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Admissions",
									"description": "Admissions",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeAdmissions",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('admissions?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeAdmissions_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_929/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Admissions",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/admissions/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "929"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fc0d63176713558"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife_Isep_929_enroll_groups_enrollments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Enroll groups",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "WebClasslifeEnroll_groups",
									"description": "Activity web that calls the endpoint enroll_groups",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ClasslifeProductos",
									"description": "ClasslifeEnrollGroups",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnroll_groups",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enroll_groups?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeProductos_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ClasslifeProductos",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnroll_groups').output.data.items)\n",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife_929/')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files Enroll Groups",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Delete Files Enrollments",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Until Enrollments",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Reboot PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('NextItem'), 0)\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "2 PageCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 TempCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PageCounter",
										"value": {
											"value": "@variables('TempCounter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 TempCounter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Enrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TempCounter",
										"value": {
											"value": "@add(variables('PageCounter'), 1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "2 Set Items",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "2 PageCounter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "NextItem",
										"value": {
											"value": "@length(activity('WebClasslifeEnrollments').output.data.items)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebClasslifeEnrollments",
									"description": "Activity web that calls the endpoint Enrollments",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"apiKey": {
												"value": "@pipeline().parameters.API_KEY",
												"type": "Expression"
											},
											"clientId": {
												"value": "@pipeline().parameters.API_CLIENT",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://api.classlife.io/api/v1/enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Enrollments",
									"description": "Enrollments",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "WebClasslifeEnrollments",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Content-Type": "application/json",
												"apiKey": {
													"value": "@pipeline().parameters.API_KEY",
													"type": "Expression"
												},
												"clientId": {
													"value": "@pipeline().parameters.API_CLIENT",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Classlife",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@concat('enrollments?showMetas=1&limit=', pipeline().parameters.limit, '&page=', variables('PageCounter'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/classlife_929/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat('JsaClassLifeEnrollments_', string(variables('PageCounter')), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Reboot PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Until Enroll groups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@int(1)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "929"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fc0d63176713558"
					},
					"limit": {
						"type": "string",
						"defaultValue": "1500"
					}
				},
				"variables": {
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"NextItem": {
						"type": "Integer"
					},
					"WebActivityRequest": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousepro.vault.azure.net/secrets/clientifytoken/5aaa9d80ef79468aa26b888ef06f7541?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "WebGetToken CIEP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousepro.vault.azure.net/secrets/clientifyCIEP/60c9376c8f074e028c48ac196e2126dd?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Ciep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken CIEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken CIEP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Ciep",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsciep.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken FP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousepro.vault.azure.net/secrets/clientifyFP/ef96be5f9d174ee189c77fc0f81c39bd?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Fp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken FP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken FP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Fp",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsfp.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-23T10:53:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeCIEP_FP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "WebGetToken CIEP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifyCIEP/2dc5256643a6405392ec37abd7b74d55?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Ciep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken CIEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken CIEP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Ciep",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsciep.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken FP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytokenFP/4498a027b1af41fd8d8fe01dc9f45b46?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Fp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken FP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken FP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Fp",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsfp.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/deals/?page_size=250&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:01.500",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/deals/?page_size=250&created[gte]=09-01-2023&created[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_IdForDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyIdForDeleteBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": "https://api.clientify.net/v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/idfordelete/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsidfordelete.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_LostReason')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyLostReasonBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id,lost_reason&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/lostreason/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealslostreason.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		}
	]
}