{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-metrodoralakehouse-pro"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Deals_Zoho_38b')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Deals",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Deals_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_38b/Deals/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_38b/Deals/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 10000",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "3 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "3 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    10000\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 10000",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "4 Executed",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@variables('AccessToken')",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "4 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 13300",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "4 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "4 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    13300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 13300",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "5 Executed",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Leads_Zoho_38b')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Leads",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Leads_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_38b/Leads/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_38b/Leads/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Leads_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Leads_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Zoho_38b')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WebZohoAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WebZohoAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "WebZohoAPI",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.zoho.eu/oauth/v2/token",
							"body": {
								"value": "@concat('client_id=', pipeline().parameters.client_id, \n        '&client_secret=', pipeline().parameters.client_secret,\n        '&refresh_token=', pipeline().parameters.refresh_token,\n        '&grant_type=refresh_token')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set variable Users Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WebZohoAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WebActivityName",
							"value": {
								"value": "@activity('WebZohoAPI').output.access_token\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@if(contains(activity('1 Executed Deals').output.pipelineReturnValue, 'PageCounter'), activity('1 Executed Deals').output.pipelineReturnValue.PageCounter, pipeline().parameters.PageCounter)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds Start Execution",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    10\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Deals",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable Users Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Zoho_Deals_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_38b/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_38b/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@if(contains(activity('1 Executed Deals').output.pipelineReturnValue, 'NextPageToken'), activity('1 Executed Deals').output.pipelineReturnValue.NextPageToken, '')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds Start Execution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Zoho_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@variables('AccessToken')",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "If Pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "1"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Zoho"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesBronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronze",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronze",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronze_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronze_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesBronzeF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0_LostReason",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0_LostReason",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesBronzeF0_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronzeF0_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronzeF0_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0_LostReason_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0_LostReason_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesBronzeF0_Full_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronzeF0_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronzeF0_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-25T09:21:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesBronzeF0_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-25T09:21:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesBronze_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronze_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronze_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronze_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronze_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronze_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronze_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesDWHF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowSalesDWHF0",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_SalesDWHF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceSalesGoldF0": {},
									"sink1": {
										"schema": "public",
										"table": "f0sales"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/DWHF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesGoldF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineOdooLeadGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosPhone",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0_IdForDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LeadsNetosPhone",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosEmail",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosPhone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LeadsNetosEmail",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LostReason",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LostReason",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0_LostReason",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesGoldF0_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineOdooLeadGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosPhone",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LeadsNetosPhone",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosEmail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosPhone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LeadsNetosEmail",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesGoldF0_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineOdooLeadGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosPhone",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0_LostReason",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LeadsNetosPhone",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosEmail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0_LeadsNetosPhone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LeadsNetosEmail",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsGoldF0_LostReason",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClientifyDealsGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsGoldF0_LostReason",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CallsSalesBronzeSilver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineSalesBronze_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesBronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineClienitfyOdooSilver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesBronze_Full",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClienitfyOdooSilver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineSalesSilver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClienitfyOdooSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesSilver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsBronze",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsBronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "AircallCallsSilver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsBronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks,'AircallCallsSilver')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					},
					"silver_storage_databricks": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T18:43:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_SalesBronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CallsSalesBronzeSilver_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineSalesBronze_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesBronze_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsBronzeSilver_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsBronzeSilver_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClienitfyOdooSilver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesBronze_Full",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClienitfyOdooSilver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesSilver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineClienitfyOdooSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesSilver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_SalesBronze_Full')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_Zoho_FP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Contacts 38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Deals 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Leads 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Contacts_Zoho_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "FP_Bronze_Silver_38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Contacts 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Users 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Ciclos 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Programas 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Zoho_FP_Silver_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Deals 38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Deals_Zoho_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Leads 38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Leads_Zoho_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Users 38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Deals 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Leads 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Users_Zoho_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Ciclos 38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Deals 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Leads 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Ciclos_Zoho_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Programas 38b",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Deals 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Leads 38b",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Programas_Zoho_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"reprocessDate": {
						"type": "string",
						"defaultValue": "7"
					},
					"silver_storage_databricks": {
						"type": "string",
						"defaultValue": "/Workspace/Repos/production_repository/notebooks-databricks-prod/Lakehouse/Silver/"
					},
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccesToken": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/General"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_Parent_Deals_Zoho_38b')]",
				"[concat(variables('factoryId'), '/pipelines/p_Parent_Leads_Zoho_38b')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesSilverF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsSilverF0_LostReason",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsSilverF0_LostReason",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsSilverF0_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsSilverF0_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/SilverF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SalesSilverF0_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/SilverF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-25T09:24:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_GeneralF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineAircallCallsBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsBronzeF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dayToLoad": {
									"value": "@pipeline().parameters.dayToLoad",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineSalesSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesBronzeF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesSilverF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesDWHF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesDWHF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsSilverF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineCallsDWHF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_CallsDWHF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineBudgetBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineBudgetGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineBudgetBronzeF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineBudgetDWHF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineBudgetGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetDWHF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/GeneralF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_SalesBronzeF0')]",
				"[concat(variables('factoryId'), '/pipelines/p_SalesSilverF0')]",
				"[concat(variables('factoryId'), '/pipelines/p_SalesGoldF0')]",
				"[concat(variables('factoryId'), '/pipelines/p_SalesDWHF0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_GeneralF0_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineAircallCallsBronzeF0Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsBronzeF0_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsBronzeF0Full",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsSilverF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineCallsDWHF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineAircallCallsGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_CallsDWHF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesBronzeF0_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesBronzeF0_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesSilverF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesBronzeF0_Full",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesSilverF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesSilverF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineSalesDWHF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineSalesGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_SalesDWHF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineBudgetBronzeF0",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetBronzeF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineBudgetGoldF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineBudgetBronzeF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetGoldF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineBudgetDWHF0",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecutePipelineBudgetGoldF0",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetDWHF0",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GeneralF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_SalesBronzeF0_Full')]",
				"[concat(variables('factoryId'), '/pipelines/p_SalesSilverF0')]",
				"[concat(variables('factoryId'), '/pipelines/p_SalesGoldF0')]",
				"[concat(variables('factoryId'), '/pipelines/p_SalesDWHF0')]"
			]
		}
	]
}