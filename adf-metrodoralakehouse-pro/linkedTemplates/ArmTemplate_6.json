{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-metrodoralakehouse-pro"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/p_BudgetDWHF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowBudgetDWHF0",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_BudgetDWHF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceBudgetGoldF0": {},
									"sink1": {
										"schema": "public",
										"table": "f0budget"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/DWHF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_BudgetGoldF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowBudgetGoldF0",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_BudgetGoldF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceBudgetBronzeF0": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehousef0/budget/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										},
										"filename": "masterbudget.parquet"
									},
									"sinkBudgetGoldF0": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CallsDWHF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowCallsDWHF0",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_CallsDWHF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceCallsGoldF0": {},
									"sink1": {
										"schema": "public",
										"table": "f0calls"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/DWHF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CallsSalesBronzeSilver_Full_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineClientifyDealsBronze_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronze_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineOdooLeadBronze_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_OdooLeadBronze_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineClientifyDealsBronze_IdForDelete",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_ClientifyDealsBronze_IdForDelete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecutePipelineAircallCallsBronzeSilver_Full",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_AircallCallsBronzeSilver_Full",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Lakehouse/Bronze/Old"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsSilverF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowClientifySilver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ClientifyDealsSilverF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceClientifyBronze": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehousef0/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										},
										"filename": "clientifydeals.json"
									},
									"sinkClientifySilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/SilverF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsSilverF0_IdForDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataflowClientifyDealsSilverF0_IdForDelete",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ClientifyDealsSilverF0_IdForDelete",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceClientifyIdForDeleteBronze": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehousef0/clientify/idfordelete/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										},
										"filename": "clientifydealsidfordelete.json"
									},
									"sinkClientifyLostReasonSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/SilverF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsSilverF0_LostReason')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataflowClientifyDealsSilverF0_LostReason",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ClientifyDealsSilverF0_LostReason",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceClientifyLostReasonBronze": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehousef0/clientify/lostreason/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										},
										"filename": "clientifydealslostreason.json"
									},
									"sinkClientifyLostReasonSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/SilverF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_Budget_old')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineBudgetBronze",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetBronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BudgetSilver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecutePipelineBudgetBronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'BudgetSilver')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ExecutePipelineBudgetGold_dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BudgetSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetGold_dim_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "BudgetGold_fct",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecutePipelineBudgetGold_dim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.gold_storage_databricks, 'fct_budget_gold')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ExecutePipelineBudgetDWH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BudgetGold_fct",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_BudgetDWH_old",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"dwh_storage_databricks": {
									"value": "@pipeline().parameters.dwh_storage_databricks",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"silver_storage_databricks": {
						"type": "string"
					},
					"gold_storage_databricks": {
						"type": "string"
					},
					"dwh_storage_databricks": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Lakehouse/DWH"
				},
				"annotations": [],
				"lastPublishTime": "2025-05-14T10:11:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_Classlife_FP_931')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteClasslife931_productos_admissions",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife931_productos_admissions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"API_CLIENT": "931",
								"API_KEY": "C!F5ec7888d40c7e8"
							}
						}
					},
					{
						"name": "ClasslifeProductos_931",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife931_productos_admissions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fp_931/ClasslifeProductos_931')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeStudents_931",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife931_students",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fp_931/ClasslifeStudents_931')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeEnrollments_931",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife931_enrollments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fp_931/ClasslifeEnrollments_931')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeReceipts_931",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife931_receipts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fp_931/ClasslifeReceipts_931')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeAdmissions_931",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife931_productos_admissions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fp_931/ClasslifeAdmissions_931')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ExecuteClasslife931_enrollments",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife931_enrollments",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"API_CLIENT": "931",
								"API_KEY": "C!F5ec7888d40c7e8"
							}
						}
					},
					{
						"name": "ExecuteClasslife931_receipts",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife931_receipts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"API_CLIENT": "931",
								"API_KEY": "C!F5ec7888d40c7e8"
							}
						}
					},
					{
						"name": "ExecuteClasslife931_students",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife931_students",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"API_CLIENT": "931",
								"API_KEY": "C!F5ec7888d40c7e8"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"silver_storage_databricks": {
						"type": "string",
						"defaultValue": "/Workspace/Repos/production_repository/notebooks-databricks-prod/Lakehouse/Silver/"
					}
				},
				"folder": {
					"name": "Lakehouse/General"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_Classlife_Fisiofocus_919')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteClasslife919",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife919_enroll_groups_receipts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ClasslifeProductos",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife919",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fisiofocus_919/ClasslifeProductos')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeStudents",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteaStudents_Classlife919",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fisiofocus_919/ClasslifeStudents')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeEnrollments",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteaEnrollments_Classlife919",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fisiofocus_919/ClasslifeEnrollments')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeReceipts",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife919",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fisiofocus_919/ClasslifeReceipts')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeAdmissions",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteaAdmissions_Classlife919",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_fisiofocus_919/ClasslifeAdmissions')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ExecuteaAdmissions_Classlife919",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife919_admissions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteaEnrollments_Classlife919",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife919_enrollments",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteaStudents_Classlife919",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife919_students",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"silver_storage_databricks": {
						"type": "string",
						"defaultValue": "/Workspace/Repos/production_repository/notebooks-databricks-prod/Lakehouse/Silver/"
					}
				},
				"folder": {
					"name": "Lakehouse/General"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-03T16:56:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_Classlife_ISEP_929')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteClasslife929_enroll_groups_enrollments",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife_Isep_929_enroll_groups_enrollments",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ClasslifeProductos_929",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife929_enroll_groups_enrollments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_isep_929/ClasslifeProductos_929')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeStudents_929",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife929_Students",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_isep_929/ClasslifeStudents_929')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeEnrollments_929",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife929_enroll_groups_enrollments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_isep_929/ClasslifeEnrollments_929')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeReceipts_929",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife929_Receipts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_isep_929/ClasslifeReceipts_929')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ClasslifeAdmissions_929",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ExecuteClasslife929_Admissions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.silver_storage_databricks, 'classlife_isep_929/ClasslifeAdmissions_929')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ExecuteClasslife929_Admissions",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife_Isep_929_admissions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteClasslife929_Receipts",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife_Isep_929_Receipts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ExecuteClasslife929_Students",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Classlife_Isep_929_Students",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"silver_storage_databricks": {
						"type": "string",
						"defaultValue": "/Workspace/Repos/production_repository/notebooks-databricks-prod/Lakehouse/Silver/"
					}
				},
				"folder": {
					"name": "Lakehouse/General"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-09T17:21:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_Zoho_Fisiofocus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteZohoFisiofocus",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Parent_Zoho_Fisiofocus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecuteZohoFisiofocusBronzetoSilver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ExecuteZohoFisiofocus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Zoho_Fisiofocus_Silver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"reprocessDate": {
						"type": "string",
						"defaultValue": "7"
					},
					"silver_storage_databricks": {
						"type": "string",
						"defaultValue": "/Workspace/Repos/production_repository/notebooks-databricks-prod/Lakehouse/Silver/"
					}
				},
				"folder": {
					"name": "Lakehouse/General"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-27T20:32:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_General_dimFijas_Mapeo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecutePipelineGeneral_dimEstudio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_General_dimEstudio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								},
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								},
								"dwh_storage_databricks": {
									"value": "@pipeline().parameters.dwh_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineGeneral_dimPais",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_General_dimPais",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								},
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								},
								"dwh_storage_databricks": {
									"value": "@pipeline().parameters.dwh_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineGeneral_MapeoEstudio",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_General_MapeoEstudio",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								},
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineGeneral_MapeoModalidad",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_General_MapeoModalidad",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								},
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineGeneral_MapeoOrigenCampania",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_General_MapeoOrigenCampania",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								},
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ExecutePipelineGeneral_MapeoSede",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_General_MapeoSede",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"silver_storage_databricks": {
									"value": "@pipeline().parameters.silver_storage_databricks",
									"type": "Expression"
								},
								"gold_storage_databricks": {
									"value": "@pipeline().parameters.gold_storage_databricks",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dim_fecha_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.gold_storage_databricks, 'dim_fecha_gold')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_fecha_DWH",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Dim_fecha_gold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.dwh_storage_databricks, 'dim_fecha')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_hora_gold",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.gold_storage_databricks, 'dim_hora_gold')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_hora_DWH",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Dim_hora_gold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.dwh_storage_databricks, 'dim_hora')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Origen_Classlife",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@concat(pipeline().parameters.gold_storage_databricks, 'origen_Classlife')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"silver_storage_databricks": {
						"type": "string"
					},
					"gold_storage_databricks": {
						"type": "string"
					},
					"dwh_storage_databricks": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Lakehouse/General/General_dimFijas_Mapeo"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T18:43:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_OdooLeadSilverF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowOdooSilver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_OdooLeadSilverF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceOdooBronze": {
										"container": "bronze",
										"folder": {
											"value": "@concat('lakehousef0/odoo/lead/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
											"type": "Expression"
										},
										"filename": "odoolead.json"
									},
									"sinkOdooSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/SilverF0"
				},
				"annotations": [],
				"lastPublishTime": "2025-03-22T17:50:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Contacts_Zoho_38b')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Leads",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Contacts_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_38b/Contacts/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_38b/Contacts/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Contacts_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Contacts_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Contacts_Zoho_Isep_34f')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Leads",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Contacts_Isep_34f",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_34f/Contacts/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_34f/Contacts/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Contacts_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Contacts_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.34fd15fcfd6362189382a6d9c93e2ac4.306ed77e527f45ace0f33bcf2302eba4"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Deals_Zoho_38b')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Deals",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Deals_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_38b/Deals/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_38b/Deals/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 10000",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "3 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "3 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    10000\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 10000",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "4 Executed",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@variables('AccessToken')",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "4 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 13300",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "4 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "4 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    13300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 13300",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "5 Executed",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Deals_Zoho_Isep_34f')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Deals",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Deals_Isep_34f",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_34f/Deals/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_34f/Deals/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Deals",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Deals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 10000",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "3 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "3 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    10000\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "3 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 10000",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "4 Executed",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@variables('AccessToken')",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "4 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('3 Executed Deals').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "3 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 13300",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "4 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "4 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    13300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "4 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 13300",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "5 Executed",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Deals_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.34fd15fcfd6362189382a6d9c93e2ac4.306ed77e527f45ace0f33bcf2302eba4"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Leads_Zoho_38b')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Leads",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Leads_38b",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_38b/Leads/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_38b/Leads/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Leads_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "2 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Leads_38b",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.38b38aaaa19f9e17d7228903a78f2220.44022c9409dbc53987bcc273e18eb666"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/FP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Parent_Leads_Zoho_Isep_34f')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 3350 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "PageCounter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "NextPageToken",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "New SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    3300\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "1 Executed Leads",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Modified Since Date Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetTokenStartTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_Child_Leads_Isep_34f",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"client_id": {
									"value": "@pipeline().parameters.client_id",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@pipeline().parameters.client_secret",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@pipeline().parameters.refresh_token",
									"type": "Expression"
								},
								"reprocessDate": {
									"value": "@pipeline().parameters.reprocessDate",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('WebActivityName')",
									"type": "Expression"
								},
								"PageCounter": {
									"value": "@variables('PageCounter')",
									"type": "Expression"
								},
								"IfModifiedSince": {
									"value": "@variables('If-Modified-Since')",
									"type": "Expression"
								},
								"NextPageToken": {
									"value": "@variables('NextPageToken')",
									"type": "Expression"
								},
								"TokenStartTime": {
									"value": "@variables('TokenStartTime')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CheckFolderExists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adsl_json_delete",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/zoho_34f/Leads/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFolderExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFolderExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete Files in folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adsl_json_delete",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/zoho_34f/Leads/', formatDateTime(utcnow(),'yyyy'), '/', formatDateTime(utcnow(),'MM'), '/', formatDateTime(utcnow(),'dd'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('1 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Modified Since Date Leads",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "If-Modified-Since",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(), if(equals(pipeline().parameters.reprocessDate, ''), -7, sub(0, int(pipeline().parameters.reprocessDate)))), 'yyyy-MM-ddTHH:mm:ssZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 PageCounter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PageCounter",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.PageCounter",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 NextPageToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "NextPageToken",
							"value": {
								"value": "@activity('2 Executed Leads').output.pipelineReturnValue.NextPageToken",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Seconds 6700 Start",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2 PageCounter",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 NextPageToken",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "2 SetTokenStartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(\n    div(sub(ticks(utcnow()), ticks(variables('TokenStartTime'))), 10000000),\n    6700\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 6700 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "3 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Leads_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "1 Hour pagination",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If Seconds 3350 Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(\n  or(\n    equals(trim(coalesce(variables('NextPageToken'), '')), ''),\n    equals(variables('NextPageToken'), null)\n  )\n)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "2 Executed Leads",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_Child_Leads_Isep_34f",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"client_id": {
												"value": "@pipeline().parameters.client_id",
												"type": "Expression"
											},
											"client_secret": {
												"value": "@pipeline().parameters.client_secret",
												"type": "Expression"
											},
											"refresh_token": {
												"value": "@pipeline().parameters.refresh_token",
												"type": "Expression"
											},
											"reprocessDate": {
												"value": "@pipeline().parameters.reprocessDate",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('WebActivityName')",
												"type": "Expression"
											},
											"PageCounter": {
												"value": "@variables('PageCounter')",
												"type": "Expression"
											},
											"IfModifiedSince": {
												"value": "@variables('If-Modified-Since')",
												"type": "Expression"
											},
											"NextPageToken": {
												"value": "@variables('NextPageToken')",
												"type": "Expression"
											},
											"TokenStartTime": {
												"value": "@variables('TokenStartTime')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "New SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Executed Leads",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "2 SetTokenStartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "1 Hour pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenStartTime",
							"value": {
								"value": "@utcNow()\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"client_id": {
						"type": "string",
						"defaultValue": "1000.1F4VDBCZ89HIY80175SZZF595HBSNO"
					},
					"client_secret": {
						"type": "string",
						"defaultValue": "d3743dfd871d30ac90d12b3e6ac02de1111c51076e"
					},
					"refresh_token": {
						"type": "string",
						"defaultValue": "1000.34fd15fcfd6362189382a6d9c93e2ac4.306ed77e527f45ace0f33bcf2302eba4"
					},
					"reprocessDate": {
						"type": "string",
						"defaultValue": "60"
					},
					"AccessToken": {
						"type": "string"
					},
					"PageToken": {
						"type": "string"
					},
					"NextPageToken": {
						"type": "string"
					},
					"IfModifiedSince": {
						"type": "string"
					},
					"TokenStartTime": {
						"type": "string"
					},
					"PageCounter": {
						"type": "string"
					}
				},
				"variables": {
					"WebActivityName": {
						"type": "String"
					},
					"If-Modified-Since": {
						"type": "String"
					},
					"NextPageToken": {
						"type": "String"
					},
					"Log_Token": {
						"type": "String"
					},
					"PageCounter": {
						"type": "Integer",
						"defaultValue": 1
					},
					"TempCounter": {
						"type": "Integer",
						"defaultValue": 0
					},
					"TokenStartTime": {
						"type": "String"
					},
					"AccessToken": {
						"type": "String"
					},
					"NextPageTokenPrueba": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze/ISEP"
				},
				"annotations": [],
				"lastPublishTime": "2025-06-23T12:54:36Z"
			},
			"dependsOn": []
		}
	]
}