{
	"name": "df_OdooLeadSilverF0",
	"properties": {
		"folder": {
			"name": "SilverF0"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adsl_json",
						"type": "DatasetReference"
					},
					"name": "sourceOdooBronze"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adsl",
						"type": "LinkedServiceReference"
					},
					"name": "sinkOdooSilver"
				}
			],
			"transformations": [
				{
					"name": "select1",
					"description": "Quitado company_id y stage_id porque array"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          jsonrpc as double,",
				"          result as (campaign_id as boolean, city as string, company_id as string[], contact_name as string, country_id as string, create_date as timestamp, date_action_last as string, date_closed as string, date_conversion as string, date_last_stage_update as timestamp, email_cc as boolean, email_from as string, id as integer, lost_reason as string, medium_id as boolean, mobile as string, name as string, partner_name as boolean, phone as string, planned_revenue as double, probability as double, sale_amount_total as double, source_id as boolean, stage_id as string[], state_id as string, street as string, street2 as boolean, title as boolean, user_id as string, write_date as timestamp, x_codcurso as string, x_codmodalidad as string, x_curso as string, x_curso_id as string, x_ga_campaign as string, x_ga_medium as string, x_ga_source as string, x_ga_utma as string, x_modalidad_id as string, x_sede_id as string, x_studio_field_FM3fX as boolean, zip as string)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'filepath',",
				"     documentForm: 'documentPerLine',",
				"     partitionBy('hash', 1)) ~> sourceOdooBronze",
				"derivedColumn1 select(mapColumn(",
				"          campaign_id,",
				"          city,",
				"          company_id,",
				"          contact_name,",
				"          country_id,",
				"          create_date,",
				"          date_action_last,",
				"          date_closed,",
				"          date_conversion,",
				"          date_last_stage_update,",
				"          email_cc,",
				"          email_from,",
				"          id,",
				"          lost_reason_id,",
				"          lost_reason_value,",
				"          medium_id,",
				"          mobile,",
				"          name,",
				"          partner_name,",
				"          phone,",
				"          planned_revenue,",
				"          probability,",
				"          sale_amount_total,",
				"          source_id,",
				"          stage_id,",
				"          state_id,",
				"          street,",
				"          street2,",
				"          title,",
				"          user_id,",
				"          write_date,",
				"          x_codcurso,",
				"          x_codmodalidad,",
				"          x_curso,",
				"          x_curso_id,",
				"          x_ga_campaign,",
				"          x_ga_medium,",
				"          x_ga_source,",
				"          x_ga_utma,",
				"          x_modalidad_id,",
				"          x_sede_id,",
				"          x_studio_field_FM3fX,",
				"          zip,",
				"          filepath,",
				"          country_value,",
				"          state_value,",
				"          user_value,",
				"          x_curso_value,",
				"          x_modalidad_value,",
				"          x_sede_value,",
				"          company_value,",
				"          stage_value,",
				"          processdate,",
				"          sourcesystem",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"sourceOdooBronze foldDown(unroll(result),",
				"     mapColumn(",
				"          campaign_id = result.campaign_id,",
				"          city = result.city,",
				"          company_id = result.company_id,",
				"          contact_name = result.contact_name,",
				"          country_id = result.country_id,",
				"          create_date = result.create_date,",
				"          date_action_last = result.date_action_last,",
				"          date_closed = result.date_closed,",
				"          date_conversion = result.date_conversion,",
				"          date_last_stage_update = result.date_last_stage_update,",
				"          email_cc = result.email_cc,",
				"          email_from = result.email_from,",
				"          id = result.id,",
				"          lost_reason = result.lost_reason,",
				"          medium_id = result.medium_id,",
				"          mobile = result.mobile,",
				"          name = result.name,",
				"          partner_name = result.partner_name,",
				"          phone = result.phone,",
				"          planned_revenue = result.planned_revenue,",
				"          probability = result.probability,",
				"          sale_amount_total = result.sale_amount_total,",
				"          source_id = result.source_id,",
				"          stage_id = result.stage_id,",
				"          state_id = result.state_id,",
				"          street = result.street,",
				"          street2 = result.street2,",
				"          title = result.title,",
				"          user_id = result.user_id,",
				"          write_date = result.write_date,",
				"          x_codcurso = result.x_codcurso,",
				"          x_codmodalidad = result.x_codmodalidad,",
				"          x_curso = result.x_curso,",
				"          x_curso_id = result.x_curso_id,",
				"          x_ga_campaign = result.x_ga_campaign,",
				"          x_ga_medium = result.x_ga_medium,",
				"          x_ga_source = result.x_ga_source,",
				"          x_ga_utma = result.x_ga_utma,",
				"          x_modalidad_id = result.x_modalidad_id,",
				"          x_sede_id = result.x_sede_id,",
				"          x_studio_field_FM3fX = result.x_studio_field_FM3fX,",
				"          zip = result.zip,",
				"          filepath",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(country_id = replace(split(country_id,',')[1],'[',''),",
				"          country_value = regexExtract(split(country_id,',')[2],'\"([^\"]*)'),",
				"          state_id = replace(split(state_id,',')[1],'[',''),",
				"          state_value = regexExtract(split(state_id,',')[2],'\"([^\"]*)'),",
				"          user_id = replace(split(user_id,',')[1],'[',''),",
				"          user_value = regexExtract(split(user_id,',')[2],'\"([^\"]*)'),",
				"          x_curso_id = replace(split(x_curso_id,',')[1],'[',''),",
				"          x_curso_value = regexExtract(split(x_curso_id,',')[2],'\"([^\"]*)'),",
				"          x_modalidad_id = replace(split(x_modalidad_id,',')[1],'[',''),",
				"          x_modalidad_value = regexExtract(split(x_modalidad_id,',')[2],'\"([^\"]*)'),",
				"          x_sede_id = replace(split(x_sede_id,',')[1],'[',''),",
				"          x_sede_value = regexExtract(split(x_sede_id,',')[2],'\"([^\"]*)'),",
				"          company_id = regexExtract(split(toString(company_id),',')[1],'\"([^\"]*)'),",
				"          company_value = regexExtract(split(toString(company_id),',')[2],'\"([^\"]*)'),",
				"          stage_id = regexExtract(split(toString(stage_id),',')[1],'\"([^\"]*)'),",
				"          stage_value = regexExtract(split(toString(stage_id),',')[2],'\"([^\"]*)'),",
				"          processdate = currentUTC(),",
				"          sourcesystem = 'Odoo',",
				"          date_conversion = toTimestamp(date_conversion),",
				"          id = toString(id),",
				"          date_action_last = toTimestamp(date_action_last),",
				"          date_closed = toTimestamp(date_closed),",
				"          lost_reason_id = replace(split(lost_reason,',')[1],'[',''),",
				"          lost_reason_value = regexExtract(split(toString(lost_reason),',')[2],'\"([^\"]*)'),",
				"     partitionBy('hash', 1)) ~> derivedColumn1",
				"select1 alterRow(upsertIf(true()),",
				"     partitionBy('hash', 1)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'silver',",
				"     folderPath: 'lakehousef0/odoolead',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: false,",
				"     updateable: false,",
				"     upsertable: true,",
				"     keys:['id'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkOdooSilver"
			]
		}
	}
}