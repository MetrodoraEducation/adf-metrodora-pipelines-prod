{
	"name": "df_AircallCallsGoldF0",
	"properties": {
		"folder": {
			"name": "GoldF0"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adsl",
						"type": "LinkedServiceReference"
					},
					"name": "sourceAircallCallsSilver"
				},
				{
					"linkedService": {
						"referenceName": "ls_adsl",
						"type": "LinkedServiceReference"
					},
					"name": "sourceCallsGoldF0"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adsl",
						"type": "LinkedServiceReference"
					},
					"name": "sinkCallsGoldF0"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "MapDriftedAircallCallsSilver",
					"description": "Crea una asignación explícita para cada columna de desfase."
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "MapDriftedCallsGoldF0",
					"description": "Crea una asignación explícita para cada columna de desfase."
				},
				{
					"name": "selectCallsGoldF0"
				},
				{
					"name": "aggregateMaxprocessdate"
				},
				{
					"name": "sort1"
				},
				{
					"name": "join1"
				},
				{
					"name": "filterFinal"
				},
				{
					"name": "selectFinal"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delta',",
				"     fileSystem: 'silver',",
				"     folderPath: 'lakehousef0/aircallcalls') ~> sourceAircallCallsSilver",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: 'gold',",
				"     folderPath: 'lakehousef0/calls') ~> sourceCallsGoldF0",
				"MapDriftedAircallCallsSilver select(mapColumn(",
				"          direction,",
				"          duration,",
				"          id,",
				"          started_at,",
				"          filepath,",
				"          processdate",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"sourceAircallCallsSilver derive(answered_at = toInteger(byName('answered_at')),",
				"          archived = toBoolean(byName('archived')),",
				"          asset = toString(byName('asset')),",
				"          assigned_to_availability_status = toString(byName('assigned_to_availability_status')),",
				"          assigned_to_available = toBoolean(byName('assigned_to_available')),",
				"          assigned_to_created_at = toString(byName('assigned_to_created_at')),",
				"          assigned_to_direct_link = toString(byName('assigned_to_direct_link')),",
				"          assigned_to_email = toString(byName('assigned_to_email')),",
				"          assigned_to_id = toInteger(byName('assigned_to_id')),",
				"          assigned_to_language = toString(byName('assigned_to_language')),",
				"          assigned_to_name = toString(byName('assigned_to_name')),",
				"          assigned_to_state = toString(byName('assigned_to_state')),",
				"          assigned_to_time_zone = toString(byName('assigned_to_time_zone')),",
				"          assigned_to_wrap_up_time = toBoolean(byName('assigned_to_wrap_up_time')),",
				"          contact = toString(byName('contact')),",
				"          cost = toDouble(byName('cost')),",
				"          country_code_a2 = toString(byName('country_code_a2')),",
				"          direct_link = toString(byName('direct_link')),",
				"          direction = toString(byName('direction')),",
				"          duration = toInteger(byName('duration')),",
				"          ended_at = toTimestamp(byName('ended_at')),",
				"          id = toString(byName('id')),",
				"          missed_call_reason = toString(byName('missed_call_reason')),",
				"          number_availability_status = toString(byName('number_availability_status')),",
				"          number_country = toString(byName('number_country')),",
				"          number_created_at = toString(byName('number_created_at')),",
				"          number_digits = toString(byName('number_digits')),",
				"          number_direct_link = toString(byName('number_direct_link')),",
				"          number_id = toInteger(byName('number_id')),",
				"          number_is_ivr = toBoolean(byName('number_is_ivr')),",
				"          number_live_recording_activated = toBoolean(byName('number_live_recording_activated')),",
				"          number_name = toString(byName('number_name')),",
				"          number_open = toBoolean(byName('number_open')),",
				"          number_priority = toString(byName('number_priority')),",
				"          number_time_zone = toString(byName('number_time_zone')),",
				"          number_msg_after_hours = toString(byName('number_msg_after_hours')),",
				"          number_msg_callback_later = toString(byName('number_msg_callback_later')),",
				"          number_msg_closed = toString(byName('number_msg_closed')),",
				"          number_msg_ivr = toString(byName('number_msg_ivr')),",
				"          number_msg_ringing_tone = toString(byName('number_msg_ringing_tone')),",
				"          number_msg_unanswered_call = toString(byName('number_msg_unanswered_call')),",
				"          number_msg_voicemail = toString(byName('number_msg_voicemail')),",
				"          number_msg_waiting = toString(byName('number_msg_waiting')),",
				"          number_msg_welcome = toString(byName('number_msg_welcome')),",
				"          pricing_type = toString(byName('pricing_type')),",
				"          raw_digits = toString(byName('raw_digits')),",
				"          recording = toString(byName('recording')),",
				"          recording_short_url = toString(byName('recording_short_url')),",
				"          sid = toString(byName('sid')),",
				"          started_at = toTimestamp(byName('started_at')),",
				"          status = toString(byName('status')),",
				"          transferred_by_authentication_token = toString(byName('transferred_by_authentication_token')),",
				"          transferred_by_company_id = toInteger(byName('transferred_by_company_id')),",
				"          transferred_by_created_at = toString(byName('transferred_by_created_at')),",
				"          transferred_by_custom_price = toString(byName('transferred_by_custom_price')),",
				"          transferred_by_custom_twilio_edge = toString(byName('transferred_by_custom_twilio_edge')),",
				"          transferred_by_custom_twilio_jitter_buffer_size = toString(byName('transferred_by_custom_twilio_jitter_buffer_size')),",
				"          transferred_by_custom_twilio_region = toString(byName('transferred_by_custom_twilio_region')),",
				"          transferred_by_default_out_number_id = toInteger(byName('transferred_by_default_out_number_id')),",
				"          transferred_by_default_prefix = toString(byName('transferred_by_default_prefix')),",
				"          transferred_by_deleted_at = toString(byName('transferred_by_deleted_at')),",
				"          transferred_by_email = toString(byName('transferred_by_email')),",
				"          transferred_by_first_name = toString(byName('transferred_by_first_name')),",
				"          transferred_by_id = toInteger(byName('transferred_by_id')),",
				"          transferred_by_intercom_android_hash = toString(byName('transferred_by_intercom_android_hash')),",
				"          transferred_by_intercom_hash = toString(byName('transferred_by_intercom_hash')),",
				"          transferred_by_is_admin = toBoolean(byName('transferred_by_is_admin')),",
				"          transferred_by_is_onboarded_for_teams_in_numbers = toBoolean(byName('transferred_by_is_onboarded_for_teams_in_numbers')),",
				"          transferred_by_is_onboarded_on_app = toBoolean(byName('transferred_by_is_onboarded_on_app')),",
				"          transferred_by_language = toString(byName('transferred_by_language')),",
				"          transferred_by_last_name = toString(byName('transferred_by_last_name')),",
				"          transferred_by_marked_for_deletion = toBoolean(byName('transferred_by_marked_for_deletion')),",
				"          transferred_by_migrated_on_authentication_manager = toBoolean(byName('transferred_by_migrated_on_authentication_manager')),",
				"          transferred_by_onboarding_step = toBoolean(byName('transferred_by_onboarding_step')),",
				"          transferred_by_phone_numbers_count = toBoolean(byName('transferred_by_phone_numbers_count')),",
				"          transferred_by_picture_url = toString(byName('transferred_by_picture_url')),",
				"          transferred_by_ring_timeout = toInteger(byName('transferred_by_ring_timeout')),",
				"          transferred_by_state = toString(byName('transferred_by_state')),",
				"          transferred_by_time_zone = toString(byName('transferred_by_time_zone')),",
				"          transferred_by_unavailable_until = toString(byName('transferred_by_unavailable_until')),",
				"          transferred_by_updated_at = toString(byName('transferred_by_updated_at')),",
				"          transferred_by_use_aircall_phonenumber_as_callerid = toBoolean(byName('transferred_by_use_aircall_phonenumber_as_callerid')),",
				"          transferred_by_use_mobile_incoming_calls = toString(byName('transferred_by_use_mobile_incoming_calls')),",
				"          transferred_by_use_react_phone = toBoolean(byName('transferred_by_use_react_phone')),",
				"          transferred_by_wrap_up_time = toBoolean(byName('transferred_by_wrap_up_time')),",
				"          transferred_to_availability_status = toString(byName('transferred_to_availability_status')),",
				"          transferred_to_available = toBoolean(byName('transferred_to_available')),",
				"          transferred_to_created_at = toString(byName('transferred_to_created_at')),",
				"          transferred_to_direct_link = toString(byName('transferred_to_direct_link')),",
				"          transferred_to_email = toString(byName('transferred_to_email')),",
				"          transferred_to_id = toInteger(byName('transferred_to_id')),",
				"          transferred_to_language = toString(byName('transferred_to_language')),",
				"          transferred_to_name = toString(byName('transferred_to_name')),",
				"          transferred_to_state = toString(byName('transferred_to_state')),",
				"          transferred_to_time_zone = toString(byName('transferred_to_time_zone')),",
				"          transferred_to_wrap_up_time = toBoolean(byName('transferred_to_wrap_up_time')),",
				"          user_availability_status = toString(byName('user_availability_status')),",
				"          user_available = toBoolean(byName('user_available')),",
				"          user_created_at = toString(byName('user_created_at')),",
				"          user_direct_link = toString(byName('user_direct_link')),",
				"          user_email = toString(byName('user_email')),",
				"          user_id = toInteger(byName('user_id')),",
				"          user_language = toString(byName('user_language')),",
				"          user_name = toString(byName('user_name')),",
				"          user_state = toString(byName('user_state')),",
				"          user_time_zone = toString(byName('user_time_zone')),",
				"          user_wrap_up_time = toBoolean(byName('user_wrap_up_time')),",
				"          voicemail = toString(byName('voicemail')),",
				"          voicemail_short_url = toString(byName('voicemail_short_url')),",
				"          filepath = toString(byName('filepath')),",
				"          processdate = toTimestamp(byName('processdate')),",
				"     partitionBy('hash', 1)) ~> MapDriftedAircallCallsSilver",
				"selectFinal alterRow(upsertIf(true()),",
				"     partitionBy('hash', 1)) ~> alterRow1",
				"sourceCallsGoldF0 derive(direction = toString(byName('direction')),",
				"          duration = toInteger(byName('duration')),",
				"          id = toString(byName('id')),",
				"          started_at = toTimestamp(byName('started_at')),",
				"          filepath = toString(byName('filepath')),",
				"          processdate = toTimestamp(byName('processdate')),",
				"     partitionBy('hash', 1)) ~> MapDriftedCallsGoldF0",
				"MapDriftedCallsGoldF0 select(mapColumn(",
				"          id,",
				"          processdate",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCallsGoldF0",
				"selectCallsGoldF0 aggregate(maxprocessdate = iifNull(max(processdate),toTimestamp('1900-01-01','yyyy-MM-dd')),",
				"     partitionBy('hash', 1)) ~> aggregateMaxprocessdate",
				"select1 sort(desc(processdate, true),",
				"     partitionBy('hash', 1)) ~> sort1",
				"sort1, aggregateMaxprocessdate join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> join1",
				"join1 filter(processdate>maxprocessdate,",
				"     partitionBy('hash', 1)) ~> filterFinal",
				"filterFinal select(mapColumn(",
				"          direction,",
				"          duration,",
				"          id,",
				"          started_at,",
				"          filepath,",
				"          processdate",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFinal",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'gold',",
				"     folderPath: 'lakehousef0/calls',",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable: false,",
				"     insertable: false,",
				"     updateable: false,",
				"     upsertable: true,",
				"     keys:['id'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkCallsGoldF0"
			]
		}
	}
}